{"version":3,"sources":["lib/useForm/index.js","components/Input/styles.js","components/Input/index.js","components/Select/styles.js","components/Select/index.js","components/forms/ProjectsForm/helpers.js","components/ProjectCard/styles.js","components/ProjectCard/index.js","components/JsonBlock/index.js","components/forms/ProjectsForm/styles.js","components/forms/ProjectsForm/index.js","App.js","reportWebVitals.js","index.js"],"names":["useForm","options","useState","initialValues","data","setData","errors","setErrors","handleChange","key","sanitizeFn","e","value","target","handleSubmit","a","preventDefault","validations","valid","newErrors","validation","Array","isArray","errorsArray","forEach","item","index","loopErrors","objKey","required","message","pattern","RegExp","test","custom","isValid","Object","keys","length","onSubmit","setFieldValue","resetForm","StyledInputWrapper","styled","div","Input","props","type","placeholder","onChange","error","name","className","data-testid","id","StyledWrapper","CustomSelect","disabled","selected","map","option","label","memo","details","timeOptions","projects","ProjectCard","handleDelete","handleDetailsChange","onClick","proj","project","duration","unit","JsonBlock","JSON","stringify","ProjectsForm","isForm","setIsForm","formData","alert","updatedValue","isMulti","updatedDetails","splice","deleteProjectCard","prev","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.22152db5.chunk.js","sourcesContent":["import { useState } from \"react\";\n\nconst useForm = (options) => {\n  const [data, setData] = useState(options?.initialValues || {});\n  const [errors, setErrors] = useState({});\n\n  const handleChange = (key, sanitizeFn) => (e) => {\n    const value = sanitizeFn ? sanitizeFn(e.target.value) : e.target.value;\n    setData({\n      ...data,\n      [key]: value,\n    });\n  };\n\n  const setFieldValue = (key, value) => {\n    setData({\n      ...data,\n      [key]: value,\n    });\n  };\n\n  const resetForm = () => {\n    setData(options?.initialValues || {});\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    const validations = options?.validations;\n    if (validations) {\n      let valid = true;\n      const newErrors = {};\n      for (const key in validations) {\n        const value = data[key];\n        const validation = validations[key];\n        if (Array.isArray(value)) {\n          let errorsArray = [];\n          value.forEach((item, index) => {\n            const loopErrors = {};\n            for (const objKey in item) {\n              if (validation?.required?.value && !item[objKey]) {\n                valid = false;\n                loopErrors[objKey] = validation?.required?.message;\n              }\n\n              const pattern = validation?.pattern;\n              if (pattern?.value && !RegExp(pattern.value).test(item[objKey])) {\n                valid = false;\n                loopErrors[objKey] = pattern.message;\n              }\n\n              const custom = validation?.custom;\n              if (custom?.isValid && !custom.isValid(item[objKey])) {\n                valid = false;\n                loopErrors[objKey] = custom.message;\n              }\n            }\n\n            if (!!Object.keys(loopErrors).length)\n              errorsArray[index] = loopErrors;\n          });\n\n          if (errorsArray.length) {\n            newErrors[key] = errorsArray;\n          }\n        } else {\n          if (validation?.required?.value && !value) {\n            valid = false;\n            newErrors[key] = validation?.required?.message;\n          }\n\n          const pattern = validation?.pattern;\n          if (pattern?.value && !RegExp(pattern.value).test(value)) {\n            valid = false;\n            newErrors[key] = pattern.message;\n          }\n\n          const custom = validation?.custom;\n          if (custom?.isValid && !custom.isValid(value)) {\n            valid = false;\n            newErrors[key] = custom.message;\n          }\n        }\n      }\n\n      if (!valid) {\n        return setErrors(newErrors);\n      }\n    }\n\n    setErrors({});\n\n    if (options?.onSubmit) {\n      options.onSubmit(data);\n    }\n  };\n\n  return {\n    data,\n    handleChange,\n    handleSubmit,\n    setFieldValue,\n    resetForm,\n    errors,\n  };\n};\n\nexport default useForm;\n","import styled from \"styled-components\";\n\nexport const StyledInputWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n`;\n","import { StyledInputWrapper } from \"./styles\";\n\nconst Input = (props) => {\n  const {\n    type = \"text\",\n    value = \"\",\n    placeholder = \"\",\n    required = false,\n    onChange = () => {},\n    error = \"\",\n    name = \"\",\n    className = \"\",\n  } = props;\n\n  return (\n    <StyledInputWrapper className={className}>\n      <input\n        data-testid='custom-input'\n        type={type}\n        name={name}\n        id=\"custom-input\"\n        placeholder={placeholder}\n        value={value}\n        onChange={onChange}\n        required={required}\n      />\n      {!!error && <p data-testid='input-error' className=\"error\">{error}</p>}\n    </StyledInputWrapper>\n  );\n};\n\nexport default Input;\n","import styled from \"styled-components\";\n\nexport const StyledWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\n","import { memo } from \"react\";\nimport { StyledWrapper } from \"./styles\";\n\nconst CustomSelect = ({ name, onChange, options, error }) => {\n  return (\n    <StyledWrapper>\n      <select name={name} onChange={onChange}>\n        <option value=\"\" disabled selected>\n          Select unit\n        </option>\n        {options.map((option, index) => (\n          <option key={index + option.label} value={option.value}>\n            {option.label}\n          </option>\n        ))}\n      </select>\n      {!!error && <p className=\"error\">{error}</p>}\n    </StyledWrapper>\n  );\n};\n\nexport default memo(CustomSelect);\n","export const validations = {\n  name: {\n    required: {\n      value: true,\n      message: \"Please enter your name\",\n    },\n    pattern: {\n      value: \"^[A-Za-z]*$\",\n      message:\n        \"You're not allowed to use special characters or numbers in your name.\",\n    },\n  },\n  details: {\n    required: {\n      value: true,\n      message: \"Input can't be empty\",\n    },\n  },\n};\n\nexport const options = [\n  { value: \"Bank\", label: \"Bank\" },\n  { value: \"Tank\", label: \"Tank\" },\n  { value: \"Sank\", label: \"Sank\" },\n];\n\nexport const timeOptions = [\n  { value: \"Year\", label: \"Year\" },\n  { value: \"Month\", label: \"Month\" },\n];\n\nexport const initialValues = {\n  name: \"\",\n  projects: [options[0], options[1]],\n  details: [],\n};\n","import styled from \"styled-components\";\n\nexport const StyledWrapper = styled.div`\n  border: 1px solid #e8e8e8;\n  border-radius: 4px;\n  padding: 8px;\n  position: relative;\n  margin-bottom: 15px;\n  box-shadow: 0 3px 6px rgba(0, 0, 0, 0.16), 0 3px 6px rgba(0, 0, 0, 0.23);\n\n  .delete-button {\n    position: absolute;\n    top: 0;\n    right: 0;\n    padding: 8px;\n    transform: translate(10px, -10px);\n    border-radius: 50%;\n    border: none;\n    cursor: pointer;\n  }\n\n  .card-row {\n    display: flex;\n    align-items: baseline;\n    justify-content: center;\n\n    p {\n      margin-right: 4px;\n    }\n  }\n`;\n","import { memo } from \"react\";\n\nimport CustomSelect from \"../Select\";\nimport Input from \"../Input\";\n\nimport { timeOptions } from \"../forms/ProjectsForm/helpers\";\n\nimport { StyledWrapper } from \"./styles\";\n\nconst ProjectCard = ({\n  handleDelete,\n  handleDetailsChange,\n  details,\n  projects,\n  index,\n  errors,\n}) => {\n  return (\n    <StyledWrapper>\n      <button className=\"delete-button\" type={\"button\"} onClick={handleDelete}>\n        X\n      </button>\n      <div className=\"card-row\">\n        <p>Project: </p>\n        <CustomSelect\n          name=\"project\"\n          options={projects.map((proj) => ({\n            value: proj.value,\n            label: proj.label,\n          }))}\n          onChange={(e) => {\n            handleDetailsChange(index, e);\n          }}\n          error={errors?.[index]?.project}\n        />\n      </div>\n      <div className=\"card-row\">\n        <p>Details</p>\n        <Input\n          name=\"details\"\n          placeholder={\"Details\"}\n          value={details[index].details}\n          onChange={(e) => {\n            handleDetailsChange(index, e);\n          }}\n          error={errors?.[index]?.details}\n        />\n      </div>\n      <div className=\"card-row\">\n        <p>Duration</p>\n        <Input\n          name={\"duration\"}\n          type=\"number\"\n          value={details[index].duration}\n          onChange={(e) => {\n            handleDetailsChange(index, e);\n          }}\n          error={errors?.[index]?.duration}\n        />\n        <CustomSelect\n          name=\"unit\"\n          options={timeOptions}\n          onChange={(e) => {\n            handleDetailsChange(index, e);\n          }}\n          error={errors?.[index]?.unit}\n        />\n      </div>\n    </StyledWrapper>\n  );\n};\n\nexport default memo(ProjectCard);\n","import { memo } from \"react\";\n\nconst JsonBlock = (data) => {\n  return <code>{JSON.stringify(data, null, 2)}</code>;\n};\n\nexport default memo(JsonBlock);\n","import styled from \"styled-components\";\n\nexport const StyledWrapper = styled.div`\n  max-width: 700px;\n  padding: 30px;\n  height: calc(100vh - 220px);\n  overflow: auto;\n\n  .name-input {\n    margin-bottom: 20px;\n  }\n\n  .add-project {\n    margin: 15px 0;\n\n    span {\n      margin-right: 5px;\n    }\n  }\n\n  margin-bottom: 60px;\n\n  .buttons-container {\n    width: 100%;\n    display: flex;\n    flex-direction: column;\n    position: absolute;\n    bottom: 10px;\n    left: 0;\n\n    .submit-buttons {\n      display: flex;\n      justify-content: space-between;\n      padding: 0 20px;\n\n      button {\n        background-color: #09e69c;\n        color: white;\n        border: 1px solid #07a36f;\n        border-radius: 4px;\n        padding: 10px 15px;\n        cursor: pointer;\n      }\n    }\n\n    .switch-button {\n      align-self: flex-start;\n      padding-left: 20px;\n      padding-bottom: 10px;\n\n      button {\n        border: none;\n        background-color: transparent;\n        cursor: pointer;\n        color: #0bd6d6;\n      }\n    }\n  }\n`;\n","import { memo, useState } from \"react\";\nimport Select from \"react-select\";\n\nimport useForm from \"../../../lib/useForm\";\n\nimport Input from \"../../Input\";\nimport ProjectCard from \"../../ProjectCard\";\nimport JsonBlock from \"../../JsonBlock\";\n\nimport { initialValues, validations, options } from \"./helpers\";\n\nimport { StyledWrapper } from \"./styles\";\n\nconst ProjectsForm = () => {\n  const [isForm, setIsForm] = useState(true);\n  const { handleSubmit, handleChange, setFieldValue, resetForm, data, errors } =\n    useForm({\n      validations,\n      onSubmit: (formData) =>\n        alert(`User submitted!, ${JSON.stringify(formData)}`),\n      initialValues,\n    });\n\n  const handleDetailsChange = (index, e) => {\n    const updatedValue = data.details;\n    updatedValue[index][e.target.name] = e.target.value;\n    setFieldValue(\"details\", updatedValue);\n  };\n\n  const deleteProjectCard = (index) => {\n    data.details.splice(index, 1);\n    setFieldValue(\"details\", data.details);\n  };\n\n  return (\n    <StyledWrapper>\n      <form className=\"registration-wrapper\" onSubmit={handleSubmit}>\n        {isForm ? (\n          <>\n            <Input\n              name=\"name\"\n              placeholder=\"Name*\"\n              value={data.name || \"\"}\n              onChange={handleChange(\"name\")}\n              error={errors.name}\n              className={\"name-input\"}\n            />\n            <Select\n              value={data.projects}\n              isMulti\n              name=\"projects\"\n              options={options}\n              onChange={(value) => setFieldValue(\"projects\", value)}\n            />\n            <div>\n              <div className=\"add-project\">\n                <span>Projects Details</span>\n                <button\n                  type={\"button\"}\n                  onClick={() => {\n                    const updatedDetails = [\n                      ...data.details,\n                      {\n                        project: \"\",\n                        details: \"\",\n                        duration: \"\",\n                        unit: \"\",\n                      },\n                    ];\n                    setFieldValue(\"details\", updatedDetails);\n                  }}\n                >\n                  +\n                </button>\n              </div>\n              {data.details.map((project, index) => (\n                <ProjectCard\n                  key={index}\n                  index={index}\n                  details={data.details}\n                  projects={data.projects}\n                  handleDetailsChange={handleDetailsChange}\n                  errors={errors?.details}\n                  handleDelete={() => deleteProjectCard(index)}\n                />\n              ))}\n            </div>\n          </>\n        ) : (\n          <JsonBlock data={data} />\n        )}\n        <div className=\"buttons-container\">\n          <div className=\"switch-button\">\n            <button type=\"button\" onClick={() => setIsForm((prev) => !prev)}>\n              {isForm ? \"TO JSON\" : \"TO FORM\"}\n            </button>\n          </div>\n          <div className=\"submit-buttons\">\n            <button type=\"button\" onClick={resetForm}>\n              Cancel\n            </button>\n            <button type=\"submit\" className=\"submit\">\n              Submit\n            </button>\n          </div>\n        </div>\n      </form>\n    </StyledWrapper>\n  );\n};\n\nexport default memo(ProjectsForm);\n","import ProjectsForm from \"./components/forms/ProjectsForm\";\n\nimport \"./App.css\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"app-header\">\n        <h1>User projects</h1>\n      </header>\n      <ProjectsForm />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}